{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _returnRes(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n  }\n\n  getCardList() {\n    return fetch(this._baseUrl + '/cards', {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n  getUserInfo() {\n    return fetch(this._baseUrl + '/users/me', {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n  addLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n  removeLike(cardId) {\n    return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (!isLiked) {\n      this.addLike(cardId);\n    } else {\n      this.removeLike(cardId);\n    }\n  }\n\n  removeCard(cardId) {\n    return fetch(this._baseUrl + '/cards/' + cardId, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n  setUserInfo({\n    name,\n    about\n  }) {\n    return fetch(this._baseUrl + '/users/me', {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n  setUserAvatar(avatar) {\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n  addCard({\n    name,\n    link\n  }) {\n    return fetch(this._baseUrl + '/cards', {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => {\n      return this._returnRes(res);\n    });\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"bf6a8c78-b245-4594-801d-fa3b505682c7\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/colinmaretsky/dev/react-around-api-full/frontend/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_returnRes","res","ok","json","Promise","reject","status","getCardList","fetch","method","then","getUserInfo","addLike","cardId","removeLike","changeLikeCardStatus","isLiked","removeCard","setUserInfo","name","about","body","JSON","stringify","setUserAvatar","avatar","addCard","link","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _returnRes(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            return Promise.reject(`Error: ${res.status}`);\n        }\n    }\n\n    getCardList() {\n        return fetch(this._baseUrl + '/cards', {\n            method: \"GET\",\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._returnRes(res);\n            })\n    }\n\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', {\n            method: \"GET\",\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._returnRes(res);\n            })\n    }\n\n    addLike(cardId) {\n        return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n            method: \"PUT\",\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._returnRes(res);\n            })\n    }\n\n    removeLike(cardId) {\n        return fetch(this._baseUrl + '/cards/likes/' + cardId, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._returnRes(res);\n            })\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (!isLiked) {\n            this.addLike(cardId);\n        } else {\n            this.removeLike(cardId);\n        }\n    }\n\n    removeCard(cardId) {\n        return fetch(this._baseUrl + '/cards/' + cardId, {\n            method: \"DELETE\",\n            headers: this._headers,\n        })\n            .then(res => {\n                return this._returnRes(res);\n            })\n    }\n\n    setUserInfo({ name, about }) {\n        return fetch(this._baseUrl + '/users/me', {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                about\n            })\n        })\n            .then(res => {\n                return this._returnRes(res);\n            })\n    }\n\n    setUserAvatar(avatar) {\n        return fetch(this._baseUrl + '/users/me/avatar', {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: avatar,\n            })\n        })\n            .then(res => {\n                return this._returnRes(res);\n            });\n    }\n\n    addCard({ name, link }) {\n        return fetch(this._baseUrl + '/cards', {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name,\n                link\n            })\n        })\n            .then(res => {\n                return this._returnRes(res);\n            })\n    }\n\n\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n    headers: {\n        authorization: \"bf6a8c78-b245-4594-801d-fa3b505682c7\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}