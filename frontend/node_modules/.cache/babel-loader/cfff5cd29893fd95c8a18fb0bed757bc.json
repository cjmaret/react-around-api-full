{"ast":null,"code":"var _jsxFileName = \"/Users/colinmaretsky/dev/react-around-auth/src/components/InfoTooltip.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./InfoTooltip.css\";\nimport ImageSuccess from \"../images/image-success.svg\";\nimport ImageFailure from \"../images/image-failure.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction InfoTooltip(props) {\n  _s();\n\n  React.useEffect(() => {\n    function close(e) {\n      if (e.key === \"Escape\") {\n        props.onClose();\n      }\n    }\n\n    props.isOpen && window.addEventListener(\"keydown\", close);\n    return () => window.removeEventListener(\"keydown\", close);\n  }, [props]);\n\n  function handleClickOutside(e) {\n    if (e.target.classList.contains(\"modal\")) {\n      e.preventDefault();\n      props.onClose();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `modal modal_type_info-tooltip ${props.isOpen ? \"modal_open\" : \"\"}`,\n      onClick: handleClickOutside,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__container modal__container_type_info-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal__close-icon modal__close-icon_type_info-tooltip\",\n          type: \"button\",\n          \"aria-label\": \"close button\",\n          onClick: props.onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-tooltip\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"info-tooltip__image\",\n            src: props.isSuccess ? ImageSuccess : ImageFailure,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"info-tooltip__title\",\n            children: props.isSuccess ? \"Success! You have now been registered.\" : \"Oops, something went wrong! Please try again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(InfoTooltip, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/colinmaretsky/dev/react-around-auth/src/components/InfoTooltip.js"],"names":["React","InfoTooltip","props","useEffect","close","e","key","onClose","isOpen","window","addEventListener","removeEventListener","handleClickOutside","target","classList","contains","preventDefault","isSuccess","ImageSuccess","ImageFailure"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;;;;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAG1BF,EAAAA,KAAK,CAACG,SAAN,CAAgB,MAAM;AACpB,aAASC,KAAT,CAAeC,CAAf,EAAkB;AAChB,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBJ,QAAAA,KAAK,CAACK,OAAN;AACD;AACF;;AACDL,IAAAA,KAAK,CAACM,MAAN,IAAgBC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCN,KAAnC,CAAhB;AACA,WAAO,MAAMK,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCP,KAAtC,CAAb;AACD,GARD,EAQG,CAACF,KAAD,CARH;;AAUA,WAASU,kBAAT,CAA4BP,CAA5B,EAA+B;AAC7B,QAAIA,CAAC,CAACQ,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,OAA5B,CAAJ,EAA0C;AACxCV,MAAAA,CAAC,CAACW,cAAF;AACAd,MAAAA,KAAK,CAACK,OAAN;AACD;AACF;;AAED,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAG,iCACVL,KAAK,CAACM,MAAN,GAAe,YAAf,GAA8B,EAC/B,EAHH;AAIE,MAAA,OAAO,EAAEI,kBAJX;AAAA,6BAME;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,uDADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,wBAAW,cAHb;AAIE,UAAA,OAAO,EAAEV,KAAK,CAACK;AAJjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,qBADZ;AAEE,YAAA,GAAG,EAAEL,KAAK,CAACe,SAAN,GAAkBC,YAAlB,GAAiCC,YAFxC;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,sBACGjB,KAAK,CAACe,SAAN,GACG,wCADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+BD;;GAnDQhB,W;;KAAAA,W;AAqDT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport \"./InfoTooltip.css\";\nimport ImageSuccess from \"../images/image-success.svg\";\nimport ImageFailure from \"../images/image-failure.svg\";\n\nfunction InfoTooltip(props) {\n  \n\n  React.useEffect(() => {\n    function close(e) {\n      if (e.key === \"Escape\") {\n        props.onClose();\n      }\n    }\n    props.isOpen && window.addEventListener(\"keydown\", close);\n    return () => window.removeEventListener(\"keydown\", close);\n  }, [props]);\n\n  function handleClickOutside(e) {\n    if (e.target.classList.contains(\"modal\")) {\n      e.preventDefault();\n      props.onClose();\n    }\n  }\n\n  return (\n    <>\n      <div\n        className={`modal modal_type_info-tooltip ${\n          props.isOpen ? \"modal_open\" : \"\"\n        }`}\n        onClick={handleClickOutside}\n      >\n        <div className=\"modal__container modal__container_type_info-tooltip\">\n          <button\n            className=\"modal__close-icon modal__close-icon_type_info-tooltip\"\n            type=\"button\"\n            aria-label=\"close button\"\n            onClick={props.onClose}\n          ></button>\n          <div className=\"info-tooltip\">\n            <img\n              className=\"info-tooltip__image\"\n              src={props.isSuccess ? ImageSuccess : ImageFailure}\n              alt=\"\"\n            />\n            <h2 className=\"info-tooltip__title\">\n              {props.isSuccess\n                ? \"Success! You have now been registered.\"\n                : \"Oops, something went wrong! Please try again.\"}\n            </h2>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default InfoTooltip;\n"]},"metadata":{},"sourceType":"module"}