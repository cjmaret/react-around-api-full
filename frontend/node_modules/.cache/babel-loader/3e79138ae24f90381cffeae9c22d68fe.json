{"ast":null,"code":"export var BASE_URL=\"https://register.nomoreparties.co\";export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(response){return response.json();}).then(function(res){return res;}).catch(function(err){console.log(err);});};export var authorize=function authorize(identifier,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({identifier:identifier,password:password})}).then(function(response){return response.json();}).then(function(data){console.log(data);if(data.token){localStorage.setItem(\"token\",data.token);console.log(data.token);return data;}else{return;}}).catch(function(err){return console.log(err);});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"sources":["/Users/colinmaretsky/dev/react-around-auth/src/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","res","catch","err","console","log","authorize","identifier","data","token","localStorage","setItem","checkToken","Authorization"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,mCAAjB,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAN2B,CAAvB,CAAL,CAQJQ,IARI,CAQC,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAVI,EAWJF,IAXI,CAWC,SAACG,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAbI,EAcJC,KAdI,CAcE,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAhBI,CAAP,CAiBD,CAlBM,CAoBP,MAAO,IAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,UAAD,CAAajB,QAAb,CAA0B,CACjD,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAFwB,CAMjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEU,UAAU,CAAVA,UAAF,CAAcjB,QAAQ,CAARA,QAAd,CAAf,CAN2B,CAAvB,CAAL,CAQJQ,IARI,CAQC,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EARD,EASJF,IATI,CASC,SAACU,IAAD,CAAU,CACZJ,OAAO,CAACC,GAAR,CAAYG,IAAZ,EACF,GAAIA,IAAI,CAACC,KAAT,CAAgB,CACdC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BH,IAAI,CAACC,KAAnC,EACAL,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,KAAjB,EACA,MAAOD,CAAAA,IAAP,CACD,CAJD,IAIO,CACL,OACD,CACF,CAlBI,EAmBJN,KAnBI,CAmBE,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT,EAnBF,CAAP,CAoBD,CArBM,CAuBP,MAAO,IAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,KAAD,CAAW,CACnC,MAAOlB,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAGPmB,aAAa,kBAAYJ,KAAZ,CAHN,CAF0B,CAAzB,CAAL,CAQJX,IARI,CAQC,SAACG,GAAD,QAASA,CAAAA,GAAG,CAACD,IAAJ,EAAT,EARD,EASJF,IATI,CASC,SAACU,IAAD,QAAUA,CAAAA,IAAV,EATD,CAAP,CAUD,CAXM","sourcesContent":["export const BASE_URL = \"https://register.nomoreparties.co\";\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ identifier, password }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n        console.log(data);\n      if (data.token) {\n        localStorage.setItem(\"token\", data.token);\n        console.log(data.token);\n        return data;\n      } else {\n        return;\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => data);\n};\n"]},"metadata":{},"sourceType":"module"}